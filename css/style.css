.roundedmenu{
    border-radius: 8px;
}
.roundedmenuextra{
    border-radius: 10px;
}


/* for form */
.customalert{
    display: none;
}


/* for underline */
/* Demo page styling: */


  
  :root {
    /* The intrinsic width of the underline stroke (in pixels). This is 
     * the same as the height of the cap images. Don't specify the
     * units! This is because of some of the calculations we do later on. */
    --underline-intrinsic-width: 8;
    
    /* The actual width of the underline stroke we want to render (in pixels).
     * You can modify this, and the sizing and positioning should be calculated
     * accordingly. Again, Don't specify the units! */
    --underline-width: 12;
    
    /* The colour used to draw the underline. It should match the colour
     * used in the cap images... unfortunately we can't modify the SVG
     * fill via CSS because it's a background image. */
    --underline-color: #f1a1e3;
    
    /* We need to know the width of the cap images so that we
     * can position everything on the x axis accordingly. */
    --underline-cap-width: 4px;
    
    /* The border is positioned relative to the bottom of the line.
     * We can move it upwards a little to create an overlap effect. */
    --underline-offset-y: -2px;
    
    /* The padding to add to the x axis. By default, the caps would be
     * aligned with the beginning and end of the line. */
    --underline-padding-x: 0.12em;
    
    /* The cap images to use that form the left and right rounded
     * shape. I guess these could be any shape, they don't
     * necessarily have to be round ðŸ™‚.
     */
    --cap-image-left: url(https://files-d4s40otz1.now.sh/left.svg);
    --cap-image-right: url(https://files-4vvqilj8v.now.sh/right.svg);
  }
    
  .heading {
    display: inline;
    --underline-width-scale: calc(var(--underline-width) / var(--underline-intrinsic-width));
    padding: 0 calc(var(--underline-padding-x) + calc(var(--underline-cap-width) * var(--underline-width-scale)));
    box-decoration-break: clone;
    background-repeat: no-repeat;
    color: #1221ff;
    background-image:
      linear-gradient(180deg, var(--underline-color), var(--underline-color)),
      var(--cap-image-left),
      var(--cap-image-right);
    background-position-x:
      calc(var(--underline-cap-width) * var(--underline-width-scale)),
      0,
      100%;
    background-position-y: calc(100% - var(--underline-offset-y) * -1);
    background-size:
      calc(100% - calc(var(--underline-cap-width) * var(--underline-width-scale) * 2)) calc(var(--underline-width) * 1px),
      auto calc(var(--underline-width) * 1px),
      auto calc(var(--underline-width) * 1px);
  }
  

  .heading--3 {
    font-size: 3rem;
    font-weight: bold;
    --underline-width: 20;
    --underline-offset-y: -2px;
    --cap-image-left: url(https://files-6lc03kjqt.now.sh/left-2.svg);
    --cap-image-right: url(https://files-e7gkh52mq.now.sh/right-2.svg);
  }
  

  /* for skills */
  .education {
    width: min(500px, 95vw);
  }
  .education__heading {
    padding-inline-start: 4rem;
  }
  .education__heading h4 {
    font-size: 2rem;
    margin-block: 0.5rem;
  }
  .education__content {
    position: relative;
    padding: 1rem 1rem 1rem 4rem;
    cursor: pointer;
    transition: background 0.3s ease-in-out;
  }
  .education__content h5 {
    color: rgba(0, 0, 0, 0.9);
    font-size: 1rem;
    margin-block: 0;
  }
  .education__content p {
    color: rgba(0, 0, 0, 0.6);
    font-size: 0.9rem;
    margin-block-start: 0.5rem;
    margin-block-end: 0;
  }
  .education__content .year {
    position: absolute;
    content: var(--year);
    width: 2rem;
    aspect-ratio: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 0.6rem;
    color: rgb(0, 0, 0);
    border-radius: 50%;
    background-color: #ffffff;
    box-shadow: inset 0 0 0 1px white;
    border: 1px solid #b3b3b3;
    left: 1rem;
    top: 0.74rem;
  }
  .education__content:hover {
    background-color: rgba(230, 230, 230, 0.48);
    border-radius: 0.25rem;
  }
  .education__content:not(:last-child):before {
    position: absolute;
    content: "";
    width: 4px;
    background-color: #dedede;
    left: calc(2rem - 2px);
    top: 2.74rem;
    bottom: -0.74rem;
    z-index: -1;
  }


 /* for sills bro */


  

  
  .ch-grid:after,
  .circle:before {
      content: '';
      display: table;
  }
  
  .ch-grid:after {
      clear: both;
  }
  
  .ch-grid li {
      width: 160px;
      height: 160px;
      display: inline-block;
      margin:10px;
  }
  
  .circle {
      width: 100%;
      height: 100%;
      border-radius: 50%;
      overflow: hidden;
      position: relative;
      cursor: pointer;
      box-shadow: 
          inset 0 0 0 14px rgba(255, 255, 255, 0.386),
          0 1px 2px rgba(0,0,0,0.1);
      transition: all 0.4s ease-in-out;
  }
  
  .ch-img { 
      position: absolute;
      width: 45%;
      height: 45%;
      left: 27%;
      top: 28%;
  }
  
  .ch-info {
      position: absolute;
      background: rgba(255, 255, 255, 0.017);
      width: inherit;
      height: inherit;
      border-radius: 50%;
      overflow: hidden;
      opacity: 0;
      transition: all 0.4s ease-in-out;
      transform: scale(0);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(10px);
  }
  
  .ch-info h3 {
      color: white;
      text-transform: uppercase;
      letter-spacing: 2px;
      font-size: 14px;
      margin: 0px 30px;
      padding: 40px 0 0 0;
  }
  
  .ch-info p {
      color: #fff;
      padding: 5px 5px;
      margin: 0 20px;
      font-size: 16px;
      border-top: 3px solid var(--clr-orange);
      opacity: 0;
      transition: all 1s ease-in-out 0.4s;
  }
  
  .circle:hover {
      box-shadow: 
          inset 0 0 0 1px rgba(255,255,255,0.1),
          0 1px 2px rgba(0,0,0,0.1);
  }
  
  .circle:hover .mask.full  {
    display: none;
  }
  
  .circle:hover .mask .fill  {
    display: none;
  }
  
  .circle:hover .ch-info {
      transform: scale(1);
      opacity: 1;
  }
  
  .circle:hover .ch-info p {
      opacity: 1;
  }
  
  .circle .mask,
  .circle .fill {
    width: 160px;
    height: 160px;
    position: absolute;
    border-radius: 50%;
  }
  
  .circle .mask {
      clip: rect(0px, 160px, 160px, 80px);
    }
  
  .mask .fill {
    clip: rect(0px, 80px, 160px, 0px);
    background-color: var(--clr-orange);
  }
  
  .mask.full,
  .circle .fill {
    animation: fill ease-in-out 3s;
  }
  
  @keyframes fill{
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: var(--to-deg);
    }
  }
  
  .circle .inside-circle {
      width: 132px;
      height: 132px;
      border-radius: 50%;
      background: #17ec17;
      margin-top: 14px;
      margin-left: 14px;
      position: absolute;
    }

#angular{
        background: rgb(250, 36, 36);
    }

 #java{
    background: rgb(153, 151, 151);
 }   